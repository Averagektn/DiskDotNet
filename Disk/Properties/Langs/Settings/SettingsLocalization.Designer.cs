//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Disk.Properties.Langs.Settings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SettingsLocalization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SettingsLocalization() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Disk.Properties.Langs.Settings.SettingsLocalization", typeof(SettingsLocalization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cursor image path.
        /// </summary>
        public static string CursorImagePath {
            get {
                return ResourceManager.GetString("CursorImagePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing the field will cause the default cursor to be used.
        /// </summary>
        public static string CursorImagePathTip {
            get {
                return ResourceManager.GetString("CursorImagePathTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increasing the frequency can lead to desynchronization. The recommended value is 50 Hz .
        /// </summary>
        public static string HzTip {
            get {
                return ResourceManager.GetString("HzTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid IP.
        /// </summary>
        public static string InvalidIpError {
            get {
                return ResourceManager.GetString("InvalidIpError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frames per second must be in range of 10 to 1000.
        /// </summary>
        public static string InvalidMoveTime {
            get {
                return ResourceManager.GetString("InvalidMoveTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sample rate must be in range of 1 to 1000.
        /// </summary>
        public static string InvalidShotTime {
            get {
                return ResourceManager.GetString("InvalidShotTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target time to live must be above 1.
        /// </summary>
        public static string InvalidTargetHP {
            get {
                return ResourceManager.GetString("InvalidTargetHP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target radius must be in rage of 1 to 15.
        /// </summary>
        public static string InvalidTargetRadius {
            get {
                return ResourceManager.GetString("InvalidTargetRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User radius must be in range of 1 to 15.
        /// </summary>
        public static string InvalidUserRadius {
            get {
                return ResourceManager.GetString("InvalidUserRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP.
        /// </summary>
        public static string Ip {
            get {
                return ResourceManager.GetString("Ip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string Language {
            get {
                return ResourceManager.GetString("Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frames per second.
        /// </summary>
        public static string MoveTime {
            get {
                return ResourceManager.GetString("MoveTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sample rate, Hz.
        /// </summary>
        public static string ShotTime {
            get {
                return ResourceManager.GetString("ShotTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target time to live, ms.
        /// </summary>
        public static string TargetHp {
            get {
                return ResourceManager.GetString("TargetHp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target radius.
        /// </summary>
        public static string TargetRadius {
            get {
                return ResourceManager.GetString("TargetRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cursor radius.
        /// </summary>
        public static string UserRadius {
            get {
                return ResourceManager.GetString("UserRadius", resourceCulture);
            }
        }
    }
}
